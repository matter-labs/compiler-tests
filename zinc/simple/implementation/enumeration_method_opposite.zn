//! { "cases": [ {
//!     "name": "first",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "1"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "2"
//!     ]
//! }, {
//!     "name": "second",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "2"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "1"
//!     ]
//! } ] }

enum List {
    FIRST = 1,
    SECOND = 2,
}

impl List {
    pub fn opposite(self) -> Self {
        match self {
            Self::FIRST => Self::SECOND,
            Self::SECOND => Self::FIRST,
        }
    }
}

contract Test {
    pub fn main(self, witness: List) -> List {
        witness.opposite()
    }
}