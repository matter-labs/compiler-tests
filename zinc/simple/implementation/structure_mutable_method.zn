//! { "cases": [ {
//!     "name": "main",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "1", "2", "3"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "131"
//!     ]
//! } ] }

struct Data {
    a: u8,
    b: u8,
    c: u8,
}

impl Data {
    pub fn fill(mut self, values: [u8; 3]) -> Self {
        self.a = values[0];
        self.b = values[1];
        self.c = values[2];
        self
    }
}

contract Test {
    pub fn main(self, witness: Data) -> u8 {
        let filled = Data::fill(witness, [25, 42, 64]);
        filled.a + filled.b + filled.c
    }
}