//! { "cases": [ {
//!     "name": "one",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "5"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "30"
//!     ]
//! }, {
//!     "name": "two",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "100"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "600"
//!     ]
//! }, {
//!     "name": "three",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "999999"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "5999994"
//!     ]
//! } ] }

enum List {
    FIRST = 1,
    SECOND = 2,
    THIRD = 3,
}

impl List {
    pub fn first() -> Self {
        Self::FIRST
    }

    pub fn second() -> Self {
        Self::SECOND
    }

    pub fn third() -> Self {
        Self::THIRD
    }
}

contract Test {
    pub fn main(self, witness: u256) -> u256 {
        (List::first() as u256 + List::second() as u256 + List::third() as u256) * witness
    }
}