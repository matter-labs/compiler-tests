//! { "cases": [ {
//!     "entry": "default",
//!     "expected": 42
//! } ] }

fn default() -> u64 {
    main(20, 22) as u64
}

unsafe fn malloc<T>(size: u16) -> *mut T {
    let memory_pointer: *mut u16 = 0x0002 as u16;
    let return_pointer = *memory_pointer as *mut T;
    *memory_pointer = (return_pointer + size) as u16;
    return_pointer
}

unsafe fn main(a: u8, b: u8) -> u8 {
    let mut memory_pointer: *mut u16 = 0x0002 as u16;
    *memory_pointer = 0x0004 as u16;

    let mut pointer_a = malloc::<u8>(1);
    *pointer_a = a;
    let mut pointer_b = malloc::<u8>(1);
    *pointer_b = b;

    *pointer_a + *pointer_b
}
