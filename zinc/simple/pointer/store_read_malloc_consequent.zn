//! { "cases": [ {
//!     "entry": "default",
//!     "expected": 42
//! } ] }

fn default() -> u64 {
    main(20, 22) as u64
}

unsafe fn malloc(size: u16) -> *mut u8 {
    let mut memory_pointer: *mut u16 = 0x0002 as u16;
    let return_pointer = (*memory_pointer / 32);
    *memory_pointer += size * 32;
    return_pointer as *mut u8
}

unsafe fn main(a: u8, b: u8) -> u8 {
    let mut memory_pointer: *mut u16 = 0x0002 as u16;
    *memory_pointer = 128 as u16;

    let mut pointer_a = malloc(1);
    let mut pointer_b = malloc(1);

    *pointer_a = a;
    *pointer_b = b;

    *pointer_a + *pointer_b
}
