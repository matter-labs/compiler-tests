//! { "cases": [ {
//!     "name": "main",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "9"
//!     ]
//! } ] }

contract Test {
    pub unsafe fn main(self) -> u8 {
        let mut memory_pointer: *mut u16 = 0x0002 as u16;
        *memory_pointer = 0x0004 as u16;

        let pointer_1 = {
            let return_pointer = *memory_pointer as *mut u8;
            *memory_pointer = (return_pointer + size_of::<u8>()) as u16;
            return_pointer as *mut u8
        };

        let pointer_2 = {
            let return_pointer = *memory_pointer as *mut u8;
            *memory_pointer = (return_pointer + size_of::<u8>()) as u16;
            return_pointer as *mut u8
        };

        pointer_1 as u16 as u8 + pointer_2 as u16 as u8
    }
}
