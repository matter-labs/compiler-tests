//! { "cases": [ {
//!     "entry": "entry",
//!     "expected": 126
//! } ] }

contract Test {
    data: ((u256, u256, u256), (u256, u256, u256), (u256, u256, u256));

    const TEST: u8 = 42;

    pub fn entry(self) -> u64 {
        Self {
            data: ((0 as u256, 0 as u256, 0 as u256), (0 as u256, 0 as u256, 0 as u256), (0 as u256, 0 as u256, 0 as u256)),
        }.default(42) as u64
    }

    fn default(mut self, argument: u8) -> u8 {
        (self.data.2).2 += argument as u256;

        argument + Self::TEST + ((self.data.2).2 as u8)
    }
}
