//! { "cases": [ {
//!     "entry": "entry",
//!     "expected": 126
//! } ] }

struct Data {
    inner: Inner,
}

struct Inner {
    value: u256,
}

contract Test {
    data: Data;

    const TEST: u8 = 42;

    pub fn entry(self) -> u64 {
        Self {
            data: Data { inner: Inner { value: 0 as u256 } },
        }.default(42) as u64
    }

    fn default(mut self, argument: u8) -> u8 {
        self.data.inner.value += argument as u256;

        argument + Self::TEST + (self.data.inner.value as u8)
    }
}
