//! { "cases": [ {
//!     "name": "default",
//!     "input": [
//!         {
//!             "entry": "default",
//!             "calldata": [
//!                 "42"
//!             ],
//!             "storage": [
//!                 "1", "2", "3",
//!                 "4", "5", "6",
//!                 "7", "8", "9"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "126"
//!     ]
//! } ] }

contract Test {
    data: ((u8, u8, u8), (u8, u8, u8), (u8, u8, u8));

    const TEST: u8 = 42;

    pub fn default(mut self, argument: u8) -> u8 {
        (self.data.2).2 = argument;

        argument + Self::TEST + (self.data.2).2
    }
}
