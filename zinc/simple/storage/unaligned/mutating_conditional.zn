//! { "cases": [ {
//!     "entry": "false_false",
//!     "engines": ["zkevm"], "expected": 42
//! }, {
//!     "entry": "false_true",
//!     "engines": ["zkevm"], "expected": 42
//! }, {
//!     "entry": "true_false",
//!     "engines": ["zkevm"], "expected": 42
//! }, {
//!     "entry": "true_true",
//!     "engines": ["zkevm"], "expected": 25
//! } ] }

contract Test {
    data: u8;

    pub fn false_false(self) -> u64 {
        Self {
            data: 0,
        }.default(false, false, 25) as u64
    }

    pub fn false_true(self) -> u64 {
        Self {
            data: 0,
        }.default(false, true, 25) as u64
    }

    pub fn true_false(self) -> u64 {
        Self {
            data: 0,
        }.default(true, false, 25) as u64
    }

    pub fn true_true(self) -> u64 {
        Self {
            data: 0,
        }.default(true, true, 25) as u64
    }

    fn default(mut self, gate_1: bool, gate_2: bool, value: u8) -> u8 {
        self.data = 42;

        if gate_1 {
            if gate_2 {
                self.data = value;
            }
        }

        self.data
    }
}
