//! { "cases": [ {
//!     "name": "condition_true",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "0", "0", "0", "1"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "1000256"
//!     ]
//! }, {
//!     "name": "condition_false",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "0", "0", "0", "0"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "0"
//!     ]
//! } ] }

struct Data {
    a: bool,
    b: u8,
    c: u256,
}

contract Test {
    pub fn main(self, mut witness: Data, condition: bool) -> u64 {
        if condition {
            witness = Data {
                a: true,
                b: 255,
                c: 1_000_000 as u256,
            };
        }

        if witness.a { 1 } else { 0 } + witness.b as u64 + witness.c as u64
    }
}