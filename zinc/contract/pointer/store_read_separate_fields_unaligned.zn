//! { "cases": [ {
//!     "name": "one",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "1", "2", "3"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "6"
//!     ]
//! }, {
//!     "name": "two",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "42", "21", "84"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "147"
//!     ]
//! }, {
//!     "name": "three",
//!     "input": [
//!         {
//!             "entry": "main",
//!             "calldata": [
//!                 "99", "66", "33"
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "198"
//!     ]
//! } ] }

struct Data {
    a: u32,
    b: u32,
    c: u32,
}

contract Test {
    pub fn main(self, a: u32, b: u32, c: u32) -> u32 {
        let mut data = Data {
            a: a,
            b: b,
            c: c,
        };
        let mut pointer: *mut Data = 0x100;
        *pointer = data;
        (*pointer).a + (*pointer).b + (*pointer).c
    }
}