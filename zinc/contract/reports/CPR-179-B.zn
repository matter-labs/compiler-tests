//! { "cases": [ {
//!     "name": "entry",
//!     "input": [
//!         {
//!             "entry": "entry",
//!             "calldata": [
//!             ]
//!         }
//!     ],
//!     "expected": [
//!         "1"
//!     ]
//! } ] }

struct Str1 {
    a: u256,
}

contract Test {
    pub fn entry(self) -> u64 {
        let p1 = Str1 {
            a: 0 as u256,
        };
        let p2 = 0 as u256;
        let p3 = 0 as u256;
        let p4 = 0 as u256;
        let p5 = 0 as u256;
        let p6 = 2 as u256; // if place here 0 or 1 - it works

        if self.main(0, p1, p2, p3, p4, p5, p6) == 0 as u256 &&
            self.main(7, p1, p2, p3, p4, p5, p6) == 0 as u256
            {1} else {0} as u64
    }

    fn main(
        self,
        param: u8,
        p1: Str1,
        p2: u256,
        p3: u256,
        p4: u256,
        p5: u256,
        p6: u256
    ) -> u256 {
        match param {
            1 => p1.a,
            2 => p2,
            3 => p3,
            4 => p4,
            5 => p5,
            6 => p6,
            _ => 0 as u256
        }
    }
}
