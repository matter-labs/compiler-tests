struct St0:
    el0: Bytes[200]

@external
def f() -> St0:
    x: St0 = empty(St0)
    x.el0 = slice(msg.data, 0, 4)
    return x

@external
def g() -> St0:
    temp: Bytes[200] = slice(msg.data, 0, 4)
    x: St0 = empty(St0)
    x.el0 = temp
    return x

@external
def hashes() -> (bytes4, bytes4):
    return(convert(slice(keccak256("f()"), 0, 4), bytes4), convert(slice(keccak256("g()"), 0, 4), bytes4))

@external
def large(_: uint256, __: uint256, ___: uint256, ____: uint256) -> St0:
    x: St0 = empty(St0)
    x.el0 = slice(msg.data, 0, 132)
    return x

@external
def another_large(_: uint256, __: uint256, ___: uint256, ____: uint256) -> St0:
    temp: Bytes[200] = slice(msg.data, 0, 132)
    x: St0 = empty(St0)
    x.el0 = temp
    return x

# ----
# f() -> 0x20, 0x20, 4, 0x26121ff000000000000000000000000000000000000000000000000000000000
# g() -> 0x20, 0x20, 4, 0xe2179b8e00000000000000000000000000000000000000000000000000000000
# hashes() -> 0x26121ff000000000000000000000000000000000000000000000000000000000, 0xe2179b8e00000000000000000000000000000000000000000000000000000000
# large(uint256,uint256,uint256,uint256): 1, 2, 3, 4 -> 0x20, 0x20, 0x84, 0xe02492f800000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000, 0x200000000000000000000000000000000000000000000000000000000, 0x300000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000
# another_large(uint256,uint256,uint256,uint256): 1, 2, 3, 4 -> 0x20, 0x20, 0x84, 0x2a46f85a00000000000000000000000000000000000000000000000000000000, 0x100000000000000000000000000000000000000000000000000000000, 0x200000000000000000000000000000000000000000000000000000000, 0x300000000000000000000000000000000000000000000000000000000, 0x400000000000000000000000000000000000000000000000000000000
