;! { "cases": [ {
;!     "name": "first",
;!     "input": [
;!         {
;!             "entry": "3df4ddf4",
;!             "calldata": [
;!             ]
;!         }
;!     ],
;!     "expected": [
;!         "42"
;!     ]
;! }, {
;!     "name": "second",
;!     "input": [
;!         {
;!             "entry": "5a8ac02d",
;!             "calldata": [
;!             ]
;!         }
;!     ],
;!     "expected": [
;!         "99"
;!     ]
;! } ] }

        .text
        .file   "Test_26"
        .globl  __entry
__entry:
.func_begin0:
        add     @CPI0_0[0], r0, r4
        and     r1, r4, r1
        add     @CPI0_1[0], r0, r4
        uma.heap_write  r4, r1, r0
        add     @CPI0_2[0], r0, r1
        uma.heap_write  r1, r2, r0
        and     1, r3, r1
        add     1, r0, r2
        sub!    r1, r2, r1
        jump.ne @.BB0_2
        add     128, r0, r1
        add     64, r0, r2
        uma.heap_write  r2, r1, r0
        ret.ok.to_label r1, @DEFAULT_FAR_RETURN
.BB0_2:
        near_call       r0, @__selector, @DEFAULT_UNWIND
.func_end0:

__selector:
.func_begin1:
        add     128, r0, r1
        add     64, r0, r2
        uma.heap_write  r2, r1, r0
        add     @CPI1_0[0], r0, r2
        uma.heap_read   r2, r0, r2
        add     3, r0, r3
        sub!    r2, r3, r3
        jump.le @.BB1_2
        add     @CPI1_1[0], r0, r3
        uma.heap_read   r3, r0, r3
        uma.calldata_read       r3, r0, r3
        add     @CPI1_2[0], r0, r4
        and     r3, r4, r3
        add     @CPI1_3[0], r0, r4
        sub!    r3, r4, r4
        jump.eq @.BB1_3
        jump    @.BB1_6
.BB1_2:
        add     0, r0, r1
        ret.revert.to_label     r1, @DEFAULT_FAR_REVERT
.BB1_3:
        add     @CPI1_5[0], r0, r3
        add     r2, r3, r2
        add     @CPI1_6[0], r0, r3
        sub!    r2, r3, r2
        jump.le @.BB1_5
        add     0, r0, r1
        ret.revert.to_label     r1, @DEFAULT_FAR_REVERT
.BB1_5:
        add     42, r0, r2
        uma.heap_write  r1, r2, r0
        add     @CPI1_7[0], r0, r1
        ret.ok.to_label r1, @DEFAULT_FAR_RETURN
.BB1_6:
        add     @CPI1_4[0], r0, r4
        sub!    r3, r4, r3
        jump.ne @.BB1_2
        add     @CPI1_5[0], r0, r3
        add     r2, r3, r2
        add     @CPI1_6[0], r0, r3
        sub!    r2, r3, r2
        jump.le @.BB1_9
        add     0, r0, r1
        ret.revert.to_label     r1, @DEFAULT_FAR_REVERT
.BB1_9:
        add     99, r0, r2
        uma.heap_write  r1, r2, r0
        add     @CPI1_7[0], r0, r1
        ret.ok.to_label r1, @DEFAULT_FAR_RETURN
.func_end1:

        .note.GNU-stack
        .rodata
CPI0_0:
        .cell 16777215
CPI0_1:
        .cell 16777184
CPI0_2:
        .cell 16777152
CPI1_0:
        .cell 16777152
CPI1_1:
        .cell 16777184
CPI1_2:
        .cell -26959946667150639794667015087019630673637144422540572481103610249216
CPI1_3:
        .cell 28023726311554802966544231341579932116438770666993405431137050659635310100480
CPI1_4:
        .cell 40953307615929575801107647705360601464619672688377251939886941387873771847680
CPI1_5:
        .cell -4
CPI1_6:
        .cell 57896044618658097711785492504343953926634992332820282019728792003956564819967
CPI1_7:
        .cell 590295810358705651840
